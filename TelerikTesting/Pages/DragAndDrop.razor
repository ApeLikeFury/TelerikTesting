@page "/dragAndDrop"
@using TelerikTesting.Models;


<GridContainer fragments="Fragments" OnFragmentUpdated="HandleStatusUpdated">
    <DataEntryPanel ListIndex="1" />
    <DataEntryPanel ListIndex="2" />
    <DataEntryPanel ListIndex="3" />
    <DataEntryPanel ListIndex="4" />
</GridContainer>

<ToolboxDrawer></ToolboxDrawer>


@code {
    string text;
    string value;
    DateTime date;
    bool enabled;
    List<string> items = new() { "1", "2", "3" };

    List<GridFragment> Fragments = new List<GridFragment>();

    protected override void OnInitialized()
    {
        Fragments.Add(new GridFragment { Id = 1, PositionIndex = 1, fragment = DropdownList() });
        Fragments.Add(new GridFragment { Id = 2, PositionIndex = 2, fragment = Switch() });
        Fragments.Add(new GridFragment { Id = 3, PositionIndex = 4, fragment = DatePicker() });

        Fragments.Add(new GridFragment { Id = 4, PositionIndex = 1, fragment = DropdownList() });
        Fragments.Add(new GridFragment { Id = 5, PositionIndex = 2, fragment = Switch() });


        Fragments.Add(new GridFragment { Id = 6, PositionIndex = 1, fragment = TextBox() });
       
    }

    void HandleStatusUpdated(GridFragment updatedJob)
    {
        Console.WriteLine(updatedJob.PositionIndex);
    }

    RenderFragment DropdownList()
    {
        return @<TelerikDropDownList Data="items" @bind-Value="value"></TelerikDropDownList>;
    }

    RenderFragment DatePicker()
    {
        return @<TelerikDatePicker @bind-Value="date"></TelerikDatePicker>;
    }

    RenderFragment TextBox()
    {
        return @<TelerikTextArea @bind-Value="text"></TelerikTextArea>;
    }

    RenderFragment Switch()
    {
        return @<TelerikSwitch @bind-Value="enabled"></TelerikSwitch>;
    }
}


<style>
    /** Simple drag and drop with Blazor CSS **/

    .jobs-container {
        display: flex;
        justify-content: space-around;
    }

    .job-status {
        display: flex;
        flex-direction: column;
        width: 312px;
    }

        .job-status ul {
            flex: 1;
        }

    .dropzone {
        padding: 30px;
        border: 1px dashed #75868a;
        list-style: none;
    }

    .no-drop {
        border: 2px dashed red;
    }

    .can-drop {
        border: 2px dashed green;
    }

    .draggable {
        position: relative;
        margin-bottom: 10px;
        padding: 10px 25px;
        border: 1px solid #EAB33C;
        cursor: grab;
        background: #EAB33C;
        color: #ffffff;
        border-radius: 5px;
        width: 250px;
    }

        .draggable .tab {
            height: 30px;
            width: 20px;
            border-radius: 5px;
            position: absolute;
            right: -15px;
            border: 1px solid orange;
            cursor: grab;
            background: orange;
            color: #ffffff;
            z-index: -1;
        }

        .draggable:active {
            cursor: grabbing;
        }

    .dragging {
        cursor: grabbing;
    }

    .description {
        font-size: 18px;
    }

    .last-updated {
        margin-bottom: 0;
        font-size: 11px;
        color: #e1e5ea;
        font-weight: bold;
    }

        .last-updated small {
            text-transform: uppercase;
            color: #c4cbd4;
            font-size: 11px;
        }
</style>

