@using TelerikTesting.Models;
<div class="job-status">

    <ul class="dropzone @dropClass"
        ondragover="event.preventDefault();"
        ondragstart="event.dataTransfer.setData('', event.target.id);"
        @ondrop="HandleDrop"
        @ondragenter="HandleDragEnter"
        @ondragleave="HandleDragLeave">

        @foreach (var fragment in fragments)
        {
            <FragmentDragItem GridModel="fragment"></FragmentDragItem>
        }

    </ul>
</div>

@code {

    [CascadingParameter] GridContainer Container { get; set; }
    [Parameter] public int ListIndex { get; set; }

    List<GridFragment> fragments = new List<GridFragment>();
    string dropClass = "";

    protected override void OnParametersSet()
    {
        fragments.Clear();
        fragments.AddRange(Container.fragments.Where(x => x.PositionIndex == ListIndex));
    }

    private void HandleDragEnter()
    {
        dropClass = "can-drop";
    }

    private void HandleDragLeave()
    {
        dropClass = "";
    }

    private async Task HandleDrop()
    {
        dropClass = "";

        await Container.UpdateJobAsync(ListIndex);
    }
}

    <style>
    /** Simple drag and drop with Blazor CSS **/

    .jobs-container {
        display: flex;
        justify-content: space-around;
    }

    .job-status {
        display: flex;
        flex-direction: column;
        width: 312px;
    }

        .job-status ul {
            flex: 1;
        }

    .dropzone {
        padding: 30px;
        border: 1px dashed #75868a;
        list-style: none;
    }

    .no-drop {
        border: 2px dashed red;
    }

    .can-drop {
        border: 2px dashed green;
    }

    .draggable {
        position: relative;
        margin-bottom: 10px;
        padding: 10px 25px;
        border: 1px solid #EAB33C;
        cursor: grab;
        background: #EAB33C;
        color: #ffffff;
        border-radius: 5px;
        width: 250px;
    }

    .draggable .tab {
        height: 30px;
        width: 20px;
        border-radius: 5px;
        position: absolute;
        right: -15px;
        border: 1px solid orange;
        cursor: grab;
        background: orange;
        color: #ffffff;
        z-index: -1;
    }

        .draggable:active {
            cursor: grabbing;
        }

    .dragging {
        cursor: grabbing;
    }

    .description {
        font-size: 18px;
    }

    .last-updated {
        margin-bottom: 0;
        font-size: 11px;
        color: #e1e5ea;
        font-weight: bold;
    }

        .last-updated small {
            text-transform: uppercase;
            color: #c4cbd4;
            font-size: 11px;
        }
    </style>