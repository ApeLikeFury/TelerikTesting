@using TelerikTesting.Models;
<div class="job-status">

    <ul class="dropzone @dropClass"
        ondragover="event.preventDefault();"
        ondragstart="event.dataTransfer.setData('', event.target.id);"
        @ondrop="HandleDrop"
        @ondragenter="HandleDragEnter"
        @ondragleave="HandleDragLeave">

        @foreach (var fragment in fragments)
        {
            <FragmentDragItem GridModel="fragment"></FragmentDragItem>
        }

    </ul>
</div>

@code {

    [CascadingParameter] GridContainer Container { get; set; }
    [Parameter] public int ListIndex { get; set; }

    List<GridFragment> fragments = new List<GridFragment>();
    string dropClass = "";

    protected override void OnParametersSet()
    {
        fragments.Clear();
        fragments.AddRange(Container.fragments.Where(x => x.PositionIndex == ListIndex));
    }

    private void HandleDragEnter()
    {
        dropClass = "can-drop";
    }

    private void HandleDragLeave()
    {
        dropClass = "";
    }

    private async Task HandleDrop()
    {
        dropClass = "";

        await Container.UpdateJobAsync(ListIndex);
    }
}
